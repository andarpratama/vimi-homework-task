{"ast":null,"code":"import _objectSpread from\"/home/andarpratama/Desktop/vimi-homework-task/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import moment from'moment';export var toCapitalize=function toCapitalize(word){return word.charAt(0).toUpperCase()+word.slice(1).toLowerCase();};export var dateFormater=function dateFormater(date){return moment(date).format('MMMM D, YYYY');};export var formatData=function formatData(data){return data.map(function(i){return _objectSpread(_objectSpread({},i),{},{createdOn:dateFormater(i.createdOn),status:toCapitalize(i.status),type:toCapitalize(i.type)});});};","map":{"version":3,"names":["moment","toCapitalize","word","charAt","toUpperCase","slice","toLowerCase","dateFormater","date","format","formatData","data","map","i","createdOn","status","type"],"sources":["/home/andarpratama/Desktop/vimi-homework-task/src/utils/formater.ts"],"sourcesContent":["import moment from 'moment';\n\nexport const toCapitalize = (word:string) => {\n    return word.charAt(0).toUpperCase() + word.slice(1).toLowerCase()\n}\n\nexport const dateFormater = (date:string) => {\n    return moment(date).format('MMMM D, YYYY')\n}\n\nexport const formatData = (data:any) => {\n    return data.map((i:any) => {\n        return {...i, \n            createdOn: dateFormater(i.createdOn), \n            status: toCapitalize(i.status),\n            type: toCapitalize(i.type)\n         }\n    })\n}"],"mappings":"kIAAA,MAAOA,OAAM,KAAM,QAAQ,CAE3B,MAAO,IAAMC,aAAY,CAAG,QAAfA,aAAY,CAAIC,IAAW,CAAK,CACzC,MAAOA,KAAI,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,EAAE,CAAGF,IAAI,CAACG,KAAK,CAAC,CAAC,CAAC,CAACC,WAAW,EAAE,CACrE,CAAC,CAED,MAAO,IAAMC,aAAY,CAAG,QAAfA,aAAY,CAAIC,IAAW,CAAK,CACzC,MAAOR,OAAM,CAACQ,IAAI,CAAC,CAACC,MAAM,CAAC,cAAc,CAAC,CAC9C,CAAC,CAED,MAAO,IAAMC,WAAU,CAAG,QAAbA,WAAU,CAAIC,IAAQ,CAAK,CACpC,MAAOA,KAAI,CAACC,GAAG,CAAC,SAACC,CAAK,CAAK,CACvB,sCAAWA,CAAC,MACRC,SAAS,CAAEP,YAAY,CAACM,CAAC,CAACC,SAAS,CAAC,CACpCC,MAAM,CAAEd,YAAY,CAACY,CAAC,CAACE,MAAM,CAAC,CAC9BC,IAAI,CAAEf,YAAY,CAACY,CAAC,CAACG,IAAI,CAAC,GAElC,CAAC,CAAC,CACN,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}