{"ast":null,"code":"import _createForOfIteratorHelper from\"/home/andarpratama/Desktop/vimi-homework-task/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";import dataList from'../constants/db.json';import{formatData}from\"./formater\";export var liveSearch=function liveSearch(keyword){var isAdvanceSearch=keyword.includes(\"is:\");var result=[];if(isAdvanceSearch){var keywordAdvance=keyword.trim().split(\"is:\").slice(1);// let group:any = []\nkeywordAdvance.forEach(function(key){// result.push(dataList.filter((data) => data.status.toLowerCase() === key.trim().toLowerCase()))\nvar _iterator=_createForOfIteratorHelper(dataList),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var data=_step.value;if(data.status.toLowerCase()===key.trim().toLowerCase()){result.push(data);}}}catch(err){_iterator.e(err);}finally{_iterator.f();}});// console.log('grup', group)\n// result = formatData(result)\n}else{for(var i=0;i<dataList.length;i++){if(dataList[i].name.toLowerCase().includes(keyword.toLowerCase())){result.push(dataList[i]);}}// result = formatData(result)\n}console.log(result);return formatData(result);};","map":{"version":3,"names":["dataList","formatData","liveSearch","keyword","isAdvanceSearch","includes","result","keywordAdvance","trim","split","slice","forEach","key","data","status","toLowerCase","push","i","length","name","console","log"],"sources":["/home/andarpratama/Desktop/vimi-homework-task/src/utils/search.ts"],"sourcesContent":["import dataList from '../constants/db.json'\nimport { formatData } from \"./formater\";\n\nexport const liveSearch = (keyword:string) => {\n    let isAdvanceSearch = keyword.includes(\"is:\");\n    let result:any = []\n\n    if(isAdvanceSearch){\n        const keywordAdvance = (keyword.trim().split(\"is:\").slice(1))\n        // let group:any = []\n        keywordAdvance.forEach(key => {\n            // result.push(dataList.filter((data) => data.status.toLowerCase() === key.trim().toLowerCase()))\n            for (const data of dataList) {\n                if(data.status.toLowerCase() === key.trim().toLowerCase()){\n                    result.push(data)\n                }\n            }\n        });\n        // console.log('grup', group)\n        // result = formatData(result)\n    } else {\n        for (var i = 0; i < dataList.length; i++) {\n            if(dataList[i].name.toLowerCase().includes(keyword.toLowerCase())) {\n                result.push(dataList[i])\n            }\n        }\n        // result = formatData(result)\n    }\n\n    console.log(result)\n    return formatData(result)\n}"],"mappings":"2JAAA,MAAOA,SAAQ,KAAM,sBAAsB,CAC3C,OAASC,UAAU,KAAQ,YAAY,CAEvC,MAAO,IAAMC,WAAU,CAAG,QAAbA,WAAU,CAAIC,OAAc,CAAK,CAC1C,GAAIC,gBAAe,CAAGD,OAAO,CAACE,QAAQ,CAAC,KAAK,CAAC,CAC7C,GAAIC,OAAU,CAAG,EAAE,CAEnB,GAAGF,eAAe,CAAC,CACf,GAAMG,eAAc,CAAIJ,OAAO,CAACK,IAAI,EAAE,CAACC,KAAK,CAAC,KAAK,CAAC,CAACC,KAAK,CAAC,CAAC,CAAE,CAC7D;AACAH,cAAc,CAACI,OAAO,CAAC,SAAAC,GAAG,CAAI,CAC1B;AAAA,yCACmBZ,QAAQ,YAA3B,+CAA6B,IAAlBa,KAAI,aACX,GAAGA,IAAI,CAACC,MAAM,CAACC,WAAW,EAAE,GAAKH,GAAG,CAACJ,IAAI,EAAE,CAACO,WAAW,EAAE,CAAC,CACtDT,MAAM,CAACU,IAAI,CAACH,IAAI,CAAC,CACrB,CACJ,CAAC,qDACL,CAAC,CAAC,CACF;AACA;AACJ,CAAC,IAAM,CACH,IAAK,GAAII,EAAC,CAAG,CAAC,CAAEA,CAAC,CAAGjB,QAAQ,CAACkB,MAAM,CAAED,CAAC,EAAE,CAAE,CACtC,GAAGjB,QAAQ,CAACiB,CAAC,CAAC,CAACE,IAAI,CAACJ,WAAW,EAAE,CAACV,QAAQ,CAACF,OAAO,CAACY,WAAW,EAAE,CAAC,CAAE,CAC/DT,MAAM,CAACU,IAAI,CAAChB,QAAQ,CAACiB,CAAC,CAAC,CAAC,CAC5B,CACJ,CACA;AACJ,CAEAG,OAAO,CAACC,GAAG,CAACf,MAAM,CAAC,CACnB,MAAOL,WAAU,CAACK,MAAM,CAAC,CAC7B,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}