{"ast":null,"code":"import dataList from '../constants/db.json';\nimport { formatData } from \"./formater\";\nexport const liveSearch = (keyword, data) => {\n  let isAdvanceSearch = keyword.includes(\"is:\");\n  let result = [];\n  if (isAdvanceSearch) {\n    const keywordAdvance = keyword.split(\"is:\");\n    for (const list of dataList) {\n      for (const key of keywordAdvance) {\n        if (list.status.toLowerCase() === key) {\n          result.push(list);\n        }\n      }\n    }\n    result = formatData(result);\n  } else {\n    for (var i = 0; i < data.length; i++) {\n      if (data[i].name.toLowerCase().includes(keyword.toLowerCase())) {\n        result.push(data[i]);\n      }\n    }\n  }\n  console.log(result);\n  return result;\n};","map":{"version":3,"names":["dataList","formatData","liveSearch","keyword","data","isAdvanceSearch","includes","result","keywordAdvance","split","list","key","status","toLowerCase","push","i","length","name","console","log"],"sources":["/home/andarpratama/Desktop/vimi-homework-task/src/utils/search.ts"],"sourcesContent":["import { IData } from \"../interfaces/IData\";\nimport VideoProjectServices from \"../services/VideoProjectService\";\nimport dataList from '../constants/db.json'\nimport { formatData } from \"./formater\";\n\nexport const liveSearch = (keyword:string, data:any) => {\n    let isAdvanceSearch = keyword.includes(\"is:\");\n    let result = []\n\n    if(isAdvanceSearch){\n        const keywordAdvance = keyword.split(\"is:\")\n        for (const list of dataList) {\n            for (const key of keywordAdvance) {\n                if(list.status.toLowerCase() === key){\n                    result.push(list)\n                }\n            }\n        }\n\n        result = formatData(result)\n    } else {\n        for (var i = 0; i < data.length; i++) {\n            if(data[i].name.toLowerCase().includes(keyword.toLowerCase())) {\n                result.push(data[i])\n            }\n        }\n    }\n\n    console.log(result)\n    return result\n}"],"mappings":"AAEA,OAAOA,QAAQ,MAAM,sBAAsB;AAC3C,SAASC,UAAU,QAAQ,YAAY;AAEvC,OAAO,MAAMC,UAAU,GAAG,CAACC,OAAc,EAAEC,IAAQ,KAAK;EACpD,IAAIC,eAAe,GAAGF,OAAO,CAACG,QAAQ,CAAC,KAAK,CAAC;EAC7C,IAAIC,MAAM,GAAG,EAAE;EAEf,IAAGF,eAAe,EAAC;IACf,MAAMG,cAAc,GAAGL,OAAO,CAACM,KAAK,CAAC,KAAK,CAAC;IAC3C,KAAK,MAAMC,IAAI,IAAIV,QAAQ,EAAE;MACzB,KAAK,MAAMW,GAAG,IAAIH,cAAc,EAAE;QAC9B,IAAGE,IAAI,CAACE,MAAM,CAACC,WAAW,EAAE,KAAKF,GAAG,EAAC;UACjCJ,MAAM,CAACO,IAAI,CAACJ,IAAI,CAAC;QACrB;MACJ;IACJ;IAEAH,MAAM,GAAGN,UAAU,CAACM,MAAM,CAAC;EAC/B,CAAC,MAAM;IACH,KAAK,IAAIQ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGX,IAAI,CAACY,MAAM,EAAED,CAAC,EAAE,EAAE;MAClC,IAAGX,IAAI,CAACW,CAAC,CAAC,CAACE,IAAI,CAACJ,WAAW,EAAE,CAACP,QAAQ,CAACH,OAAO,CAACU,WAAW,EAAE,CAAC,EAAE;QAC3DN,MAAM,CAACO,IAAI,CAACV,IAAI,CAACW,CAAC,CAAC,CAAC;MACxB;IACJ;EACJ;EAEAG,OAAO,CAACC,GAAG,CAACZ,MAAM,CAAC;EACnB,OAAOA,MAAM;AACjB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}