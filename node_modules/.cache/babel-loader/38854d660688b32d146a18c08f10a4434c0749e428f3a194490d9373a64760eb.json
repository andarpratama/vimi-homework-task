{"ast":null,"code":"import dataList from '../constants/db.json';\nimport { formatData } from \"./formater\";\nexport const liveSearch = keyword => {\n  const keywordAdvance = keyword.trim().split(\"is:\").slice(1);\n  let isAdvanceSearch = keyword.includes(\"is:\");\n  let result = [];\n  if (isAdvanceSearch) {\n    let grouped = [];\n    const keywordAdvance = keyword.trim().split(\"is:\").slice(1);\n    // for (const key of keywordAdvance) {\n    //     console.log(key)\n    grouped.push(dataList.filter(data => data.status.toLowerCase() === 'editing'));\n    // }\n    console.log(\"grop\", grouped);\n    result = formatData(result);\n  } else {\n    for (var i = 0; i < dataList.length; i++) {\n      if (dataList[i].name.toLowerCase().includes(keyword.toLowerCase())) {\n        result.push(dataList[i]);\n      }\n    }\n  }\n  console.log(result);\n  return result;\n};","map":{"version":3,"names":["dataList","formatData","liveSearch","keyword","keywordAdvance","trim","split","slice","isAdvanceSearch","includes","result","grouped","push","filter","data","status","toLowerCase","console","log","i","length","name"],"sources":["/home/andarpratama/Desktop/vimi-homework-task/src/utils/search.ts"],"sourcesContent":["import { IData } from \"../interfaces/IData\";\nimport VideoProjectServices from \"../services/VideoProjectService\";\nimport dataList from '../constants/db.json'\nimport { formatData } from \"./formater\";\n\nexport const liveSearch = (keyword:string) => {\n    const keywordAdvance = keyword.trim().split(\"is:\").slice(1)\n    let isAdvanceSearch = keyword.includes(\"is:\");\n    let result:any = []\n\n    if(isAdvanceSearch){\n        let grouped:any = []\n        const keywordAdvance = keyword.trim().split(\"is:\").slice(1)\n        // for (const key of keywordAdvance) {\n        //     console.log(key)\n            grouped.push(dataList.filter((data) => data.status.toLowerCase() === 'editing'))\n        // }\n        console.log(\"grop\", grouped)\n        result = formatData(result)\n    } else {\n        for (var i = 0; i < dataList.length; i++) {\n            if(dataList[i].name.toLowerCase().includes(keyword.toLowerCase())) {\n                result.push(dataList[i])\n            }\n        }\n    }\n\n    console.log(result)\n    return result\n}"],"mappings":"AAEA,OAAOA,QAAQ,MAAM,sBAAsB;AAC3C,SAASC,UAAU,QAAQ,YAAY;AAEvC,OAAO,MAAMC,UAAU,GAAIC,OAAc,IAAK;EAC1C,MAAMC,cAAc,GAAGD,OAAO,CAACE,IAAI,EAAE,CAACC,KAAK,CAAC,KAAK,CAAC,CAACC,KAAK,CAAC,CAAC,CAAC;EAC3D,IAAIC,eAAe,GAAGL,OAAO,CAACM,QAAQ,CAAC,KAAK,CAAC;EAC7C,IAAIC,MAAU,GAAG,EAAE;EAEnB,IAAGF,eAAe,EAAC;IACf,IAAIG,OAAW,GAAG,EAAE;IACpB,MAAMP,cAAc,GAAGD,OAAO,CAACE,IAAI,EAAE,CAACC,KAAK,CAAC,KAAK,CAAC,CAACC,KAAK,CAAC,CAAC,CAAC;IAC3D;IACA;IACII,OAAO,CAACC,IAAI,CAACZ,QAAQ,CAACa,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,MAAM,CAACC,WAAW,EAAE,KAAK,SAAS,CAAC,CAAC;IACpF;IACAC,OAAO,CAACC,GAAG,CAAC,MAAM,EAAEP,OAAO,CAAC;IAC5BD,MAAM,GAAGT,UAAU,CAACS,MAAM,CAAC;EAC/B,CAAC,MAAM;IACH,KAAK,IAAIS,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGnB,QAAQ,CAACoB,MAAM,EAAED,CAAC,EAAE,EAAE;MACtC,IAAGnB,QAAQ,CAACmB,CAAC,CAAC,CAACE,IAAI,CAACL,WAAW,EAAE,CAACP,QAAQ,CAACN,OAAO,CAACa,WAAW,EAAE,CAAC,EAAE;QAC/DN,MAAM,CAACE,IAAI,CAACZ,QAAQ,CAACmB,CAAC,CAAC,CAAC;MAC5B;IACJ;EACJ;EAEAF,OAAO,CAACC,GAAG,CAACR,MAAM,CAAC;EACnB,OAAOA,MAAM;AACjB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}